@page "/Notificaciones"
@using BusinessLogic.Interfaces
@using Domain
@inject SesionLogic SesionLogic
@inject IUsuarioLogic UsuarioLogic
@inject NavigationManager Navigation


<h3>Notificaciones</h3>

<ul>
    @if (_notificaciones == null)
    {
        <li>No hay notificaciones</li>
    }
    else
    {
        @foreach (Notificacion notificacion in _notificaciones)
        {
            <li>@notificacion?.Comentario?.UsuarioResolvedor?.Apellido Ha resuelto un comentario!</li>
            <li>Titulo del comentario: @notificacion?.Comentario?.Titulo</li>
            <li>Fecha de resolución: @notificacion?.Comentario?.FechaResolucion</li>
            <button class="btn btn-danger" @onclick="() => EliminarNotificacionSeleccionada(notificacion)">Eliminar notificación</button>
            <hr/>
        }
    }
</ul>
@code {
    private Usuario _UsuarioLogueado;
    private List<Notificacion>? _notificaciones;
    private bool firstRender = true;


    protected override void OnInitialized()
    {
        UsuarioLogic.actualizar(SesionLogic.UsuarioLogueado);
        if(SesionLogic.UsuarioLogueado != null)
        {
            _UsuarioLogueado = SesionLogic.UsuarioLogueado;
            _notificaciones = UsuarioLogic.ListarNotificaciones(_UsuarioLogueado);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && SesionLogic.UsuarioLogueado == null)
        {
            if (SesionLogic.UsuarioLogueado == null)
            {
                Navigation.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }
    
    private void EliminarNotificacionSeleccionada(Notificacion notificacion)
    {
        UsuarioLogic.EliminarNotificacion(notificacion);
        _notificaciones = UsuarioLogic.ListarNotificaciones(_UsuarioLogueado);
    }
}
