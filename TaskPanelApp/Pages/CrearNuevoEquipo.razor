@page "/crearNuevoEquipo"
@using BusinessLogic.Interfaces
@using Domain
@inject IEquipoLogic EquipoLogic
@inject NavigationManager NavigationManager
@inject SesionLogic SesionLogic
@inject NavigationManager Navigation


@if (SesionLogic.UsuarioLogueado.EsAdmin)
{
    <h3>Crear nuevo equipo</h3>

    <form @onsubmit="CrearEquipo">
        <div class="mb-3">
            <label for="nombre">Nombre:</label>
            <input id="nombre" type="text" class="form-control" maxlength="50" @bind="_equipo.Nombre" required />
        </div>

        <div class="mb-3">
            <label for="descripcion">Descripción:</label>
            <input id="descripcion" type="text" class="form-control" maxlength="50" @bind="_equipo.Descripcion" required />
        </div>

        <div class="mb-3">
            <label for="cantidadMaxima">Cantidad máxima de usuarios:</label>
            <input id="cantidadMaxima" type="number" class="form-control" @bind="_equipo.CantidadMaxima" min="1" max="500" onkeydown="return false"/>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
    </form>

    @if (!string.IsNullOrEmpty(_errorDeValidacion))
    {
        <div class="alert alert-danger">
            <p>@_errorDeValidacion</p>
        </div>
    }
}
else
{
    <h3>Error de acceso!</h3>
    <h4>Acceso denegado por falta de permisos</h4>
}

@code {
    private Equipo _equipo = new Equipo();
    private string? _errorDeValidacion;
    private Usuario? _usuarioLogueado;


    protected override void OnInitialized()
    {
        try
        {
            _usuarioLogueado = SesionLogic.UsuarioLogueado;
        }
        catch (Exception ex)
        {
            _errorDeValidacion = $"Error al inicializar: {ex.Message}";
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && SesionLogic.UsuarioLogueado == null)
        {
            if (SesionLogic.UsuarioLogueado == null)
            {
                Navigation.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }
    
    private void CrearEquipo()
    {
        _equipo = new Equipo(_equipo.Nombre, _equipo.CantidadMaxima, _equipo.Descripcion, _usuarioLogueado);
        _errorDeValidacion = EquipoLogic.ValidarYGuardarEquipo(_equipo, _usuarioLogueado);
        if (_errorDeValidacion == null)
        {
            LimpiarFormulario();
            VolverAlMenu();
        }
    }

    private void LimpiarFormulario()
    {
        _equipo = new Equipo();
    }

    private void VolverAlMenu()
    {
        NavigationManager.NavigateTo("/gestionEquipos");
    }
}
