@page "/AgregarTarea"
@using Domain
@using BusinessLogic.Interfaces
@inject IEquipoLogic EquipoLogic
@inject IPanelLogic PanelLogic
@inject SesionLogic SesionLogic
@inject NavigationManager Navigation


<h3>Agregar Tarea</h3>

<div class="mb-3 d-flex align-items-center">
    <label for="equipoSelect" class="me-2">Seleccionar Equipo:</label>
    <select id="equipoSelect" class="form-control me-2" @bind="_nombreEquipoSeleccionado">
        <option value="">Seleccione un equipo</option>
        @foreach (var equipo in _equipos)
        {
        <option value="@equipo.Nombre">@equipo.Nombre</option>
        }
    </select>
    <button class="btn btn-primary" @onclick="CargarEquipo">Cargar Equipo</button>
</div>

@if (_equipoSeleccionado != null)
{
<div class="mb-3 d-flex align-items-center">
    <label for="panelSelect" class="me-2">Seleccionar Panel:</label>
    <select id="panelSelect" class="form-control me-2" @bind="_nombrePanelSeleccionado">
        <option value="">Seleccione un panel</option>
        @foreach (var panel in _paneles.Where(p => p.Nombre != "Tareas Vencidas"))
        {
        <option value="@panel.Nombre">@panel.Nombre</option>
        }
    </select>
    <button class="btn btn-primary" @onclick="CargarPanel">Cargar Panel</button>
</div>
}

@if (!string.IsNullOrEmpty(_errorMessage))
{
<div class="alert alert-danger">
    <p>@_errorMessage</p>
</div>
}

@if (!string.IsNullOrEmpty(_successMessage))
{
<div class="alert alert-success">
    <p>@_successMessage</p>
</div>
}

@if (_panelSeleccionado != null)
{
    <div class="mb-3">
        <label>Nombre del panel: </label>
        <p>@_panelSeleccionado.Nombre</p>
    </div>

    <form @onsubmit="CrearTarea">
        <div class="mb-3">
            <label for="titulo">Titulo:</label>
            <input id="titulo" type="text" class="form-control" maxlength="50" @bind="_tarea.Titulo" required />
        </div>

        <div class="mb-3">
            <label for="descripcion">Descripcion:</label>
            <input id="descripcion" type="text" class="form-control" maxlength="50" @bind="_tarea.Descripcion" required />
        </div>
        <div class="mb-3">
            <label for="fechaExpiracion">Fecha expiracion:</label>
            <input id="fechaExpiracion" type="date" class="form-control" @bind="_fechaExpiracion" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
        </div>
        <div class="mb-3">
            <label for="prioridad">Prioridad:</label>
            <select id="prioridad" class="form-control" maxlengrth="10" @bind="_prioridad" required>
                <option value="0">Baja</option>
                <option value="1">Media</option>
                <option value="2">Urgente</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="esfuerzoEstimado">Esfuerzo Estimado (en hs):</label>
            <input id="esfuerzoEstimado" type="number" class="form-control" @bind="_tarea.EsfuerzoEstimado" min="1" required />
        </div>

        <button type="submit" class="btn btn-primary">Agregar</button>
    </form>

    @code {
    private List<Equipo> _equipos = new List<Equipo>();
    private string? _nombreEquipoSeleccionado, _nombrePanelSeleccionado, _errorMessage, _successMessage;
    private Equipo? _equipoSeleccionado;
    private List<Panel> _paneles = new List<Panel>();
    private Panel? _panelSeleccionado;
    private Tarea _tarea = new Tarea();
    private DateTime _fechaExpiracion;
    private int _prioridad;

    protected override void OnInitialized()
    {
        _equipos = EquipoLogic.ListarEquipos(SesionLogic.UsuarioLogueado);
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && SesionLogic.UsuarioLogueado == null)
        {
            if (SesionLogic.UsuarioLogueado == null)
            {
                Navigation.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }

    private void CargarEquipo()
    {
        if (!string.IsNullOrEmpty(_nombreEquipoSeleccionado))
        {
            _equipoSeleccionado = _equipos.FirstOrDefault(e => e.Nombre == _nombreEquipoSeleccionado);
            if (_equipoSeleccionado != null) _paneles = EquipoLogic.ListarPaneles(_equipoSeleccionado.Nombre);
        }
    }
    private void CargarPanel()
    {
        if (!string.IsNullOrEmpty(_nombrePanelSeleccionado))
        {
            _panelSeleccionado = _paneles.FirstOrDefault(p => p.Nombre == _nombrePanelSeleccionado);
        }
    }
    private void CrearTarea()
    {
        _tarea.PanelActual = _panelSeleccionado;
        _tarea.PanelOriginal = _panelSeleccionado;
        _tarea.FechaExpiracion = _fechaExpiracion;
        _tarea.Prioridad = (Prioridad)_prioridad;
        _errorMessage = PanelLogic.ValidarYGuardarTarea(_tarea, _panelSeleccionado, SesionLogic.UsuarioLogueado);
        if(_errorMessage == null)
        {
            LimpiarFormulario();
        }
    }
    private void LimpiarFormulario()
    {
        if (string.IsNullOrEmpty(_errorMessage))
        {
            _tarea = new Tarea();
            _successMessage = "Tarea agregada con éxito";
        }
    }
}

}