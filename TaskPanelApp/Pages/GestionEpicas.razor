@inject NavigationManager NavigationManager
@page "/GestionEpicas"
@using Domain
@using BusinessLogic.Interfaces
@inject IEquipoLogic EquipoLogic
@inject IPanelLogic PanelLogic
@inject SesionLogic SesionLogic


<h3>Gestión de épicas</h3>

<p>
    <button @onclick="CrearEpica" class="btn btn-primary">Crear épica</button>
    <a>   </a>
    <button @onclick="EliminarEpica" class="btn btn-primary">Eliminar épica</button>
    <a>   </a>
    <button @onclick="ModificarEpica" class="btn btn-primary">Modificar épica</button>
</p>

<p>
    <h4>Lista épicas</h4>
    @foreach (var epica in _epicas)
    {
        var panel = _paneles.FirstOrDefault(p => p.Epicas.Contains(epica));
        if (panel != null)
        {
            <div>@panel.EquipoAlQuePertenece - @panel.Nombre - @epica.Titulo</div>
        }
    }
</p>

@code {
    private List<Equipo> _equipos = new List<Equipo>();
    private List<Panel> _paneles = new List<Panel>();
    private readonly List<Epica> _epicas = new List<Epica>();
    private List<Epica> _epicasPorPanel = new List<Epica>();
    
    protected override void OnInitialized()
    {
        if(SesionLogic.UsuarioLogueado != null)
        {
            _equipos = EquipoLogic.ListarEquipos(SesionLogic.UsuarioLogueado);
            _paneles = _equipos.SelectMany(e => EquipoLogic.ListarPaneles(e.Nombre)).ToList();
            foreach (var panel in _paneles)
            {
                _epicasPorPanel = PanelLogic.ListarEpicas(panel.Nombre, panel.EquipoAlQuePertenece);
                _epicas.AddRange(_epicasPorPanel);
            }
        }
    }

    private void CrearEpica()
    {
        NavigationManager.NavigateTo("CrearEpica");
    }
    private void EliminarEpica()
    {
        NavigationManager.NavigateTo("EliminarEpica");
    }
    private void ModificarEpica()
    {
        NavigationManager.NavigateTo("ModificarEpica");
    }
}