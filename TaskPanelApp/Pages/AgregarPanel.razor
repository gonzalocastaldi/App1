@page "/AgregarPanel"
@using BusinessLogic
@using BusinessLogic.Interfaces
@using Domain
@inject IEquipoLogic equipoLogic
@inject SesionLogic sesionLogic
@inject NavigationManager Navigation


<h3>Agregar Panel</h3>

<div class="mb-3 d-flex align-items-center">
    <label for="equipoSelect" class="me-2">Seleccionar Equipo:</label>
    <select id="equipoSelect" class="form-control me-2" @bind="nombreEquipoSeleccionado">
        <option value="">Seleccione un equipo</option>
        @foreach (var equipo in equipos)
        {
        <option value="@equipo.Nombre">@equipo.Nombre</option>
        }
    </select>
    <button class="btn btn-primary" @onclick="CargarEquipo">Cargar Equipo</button>
</div>

@if (equipoSeleccionado != null)
{
    <div class="mb-3">
        <label>Nombre del equipo: </label>
        <p>@equipoSeleccionado.Nombre</p>
    </div>
    
    <form @onsubmit="CrearPanel">
        <div class="mb-3">
            <label for="nombre">Nombre:</label>
            <input id="nombre" type="text" class="form-control" maxlength="50" @bind="panel.Nombre" required />
        </div>

        <div class="mb-3">
            <label for="descripcion">Descripcion:</label>
            <input id="descripcion" type="text" class="form-control" maxlength="50" @bind="panel.Descripcion" required />
        </div>
        <button type="submit" class="btn btn-primary">Agregar</button>
    </form>

    @if (!string.IsNullOrEmpty(validationError))
    {
        <div class="alert alert-danger">
            <p>@validationError</p>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">
            <p>@successMessage</p>
        </div>
    }
}

@code {
    private List<Equipo> equipos = new List<Equipo>();
    private string? nombreEquipoSeleccionado;
    private Equipo? equipoSeleccionado;
    private Panel panel = new Panel();
    private string? validationError;
    private string? successMessage;
    private bool firstRender = true;


    protected override void OnInitialized()
    {
        if(sesionLogic.UsuarioLogueado != null)
        {
            equipos = equipoLogic.ListarEquipos(sesionLogic.UsuarioLogueado);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && sesionLogic.UsuarioLogueado == null)
        {
            if (sesionLogic.UsuarioLogueado == null)
            {
                Navigation.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }
    
    private void CargarEquipo()
    {
        if (!string.IsNullOrEmpty(nombreEquipoSeleccionado))
        {
            equipoSeleccionado = equipos.FirstOrDefault(e => e.Nombre == nombreEquipoSeleccionado);
        }
    }
    private void CrearPanel()
    {
        panel.EquipoAlQuePertenece = equipoSeleccionado.Nombre;
        validationError = equipoLogic.ValidarYGuardarPanel(panel, equipoSeleccionado, sesionLogic.UsuarioLogueado);
        if(validationError == null)
        {
            LimpiarFormulario();
        }
    }
    private void LimpiarFormulario()
    {
        if (string.IsNullOrEmpty(validationError))
        {
            panel = new Panel();
            successMessage = "Panel agregado con éxito";
            
        }
    }
}