@page "/agregarUsuario"
@using BusinessLogic.Interfaces
@using DTOs
@using Domain
@inject IUsuarioLogic UsuarioLogic
@inject NavigationManager NavigationManager
@inject SesionLogic SesionLogic

@if (SesionLogic.UsuarioLogueado != null && SesionLogic.UsuarioLogueado.EsAdmin)
{
    <h3>Agregar nuevo usuario</h3>

    <form @onsubmit="CrearUsuario">
        <div class="mb-3">
            <label for="email">Email:</label>
            <input id="email" type="text" class="form-control" maxlength="50" @bind="_email" required />
        </div>

        <div class="mb-3">
            <label for="nombre">Nombre:</label>
            <input id="nombre" type="text" class="form-control" maxlength="50" @bind="_nombre" required/>
        </div>

        <div class="mb-3">
            <label for="apellido">Apellido:</label>
            <input id="apellido" type="text" class="form-control" maxlength="50" @bind="_apellido" required />
        </div>

        <div class="mb-3">
            <label for="fechaNacimiento">Fecha de Nacimiento:</label>
            <input id="fechaNacimiento" type="date" class="form-control" @bind="_fechaNacimiento" required/>
        </div>

        <div class="mb-3">
            <label for="contrasena">Contraseña:</label>
            <input id="contrasena" type="password" class="form-control" maxlength="50" @bind="_contraseña" required />
        </div>

        <div class="mb-3">
            <label for="esAdmin">Es Admin:</label>
            <input id="esAdmin" type="checkbox" class="form-check-input" @bind="_esAdmin"/>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
    </form>

    @if (_validationError != null)
    {
        <div class="alert alert-danger">
            <p>@_validationError</p>
        </div>
    }
}
else
{
    <h3>Error de acceso!</h3>
    <h4>Acceso denegado por falta de permisos</h4>
}


@code {
    private Usuario _usuario = new Usuario();
    private string? _validationError, _contraseña, _email, _nombre, _apellido;
    private DateTime _fechaNacimiento;
    private bool _esAdmin;
    UsuarioDTO _user = new UsuarioDTO();
    private bool _firstRender = true;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && SesionLogic.UsuarioLogueado == null)
        {
            if (SesionLogic.UsuarioLogueado == null)
            {
                NavigationManager.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }

    private void CrearUsuario()
    {
        try
        {
            _user.EsAdmin = _esAdmin;
            _user.Nombre = _nombre;
            _user.Apellido = _apellido;
            _user.Email = _email;
            _user.FechaNacimiento = _fechaNacimiento;
            _user.Contrasena = _contraseña;

            _validationError = UsuarioLogic.ValidarYGuardarUsuario(_user);
            if (_validationError == null)
            {
                LimpiarFormulario();
                VolverAlMenu();
            }
        }
        catch (Exception e)
        {
            _validationError = e.Message;
        }
    }

    private void LimpiarFormulario()
    {
        if (string.IsNullOrEmpty(_validationError))
        {
            _usuario = new Usuario();
        }
    }
    private void VolverAlMenu()
    {
        NavigationManager.NavigateTo("/gestionUsuarios");
    }
}