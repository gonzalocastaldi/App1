@page "/AgregarPanel"
@using BusinessLogic.Interfaces
@using Domain
@inject IEquipoLogic EquipoLogic
@inject SesionLogic SesionLogic
@inject NavigationManager Navigation


<h3>Agregar Panel</h3>

<div class="mb-3 d-flex align-items-center">
    <label for="equipoSelect" class="me-2">Seleccionar Equipo:</label>
    <select id="equipoSelect" class="form-control me-2" @bind="_nombreEquipoSeleccionado">
        <option value="">Seleccione un equipo</option>
        @foreach (var equipo in _equipos)
        {
        <option value="@equipo.Nombre">@equipo.Nombre</option>
        }
    </select>
    <button class="btn btn-primary" @onclick="CargarEquipo">Cargar Equipo</button>
</div>

@if (_equipoSeleccionado != null)
{
    <div class="mb-3">
        <label>Nombre del equipo: </label>
        <p>@_equipoSeleccionado.Nombre</p>
    </div>
    
    <form @onsubmit="CrearPanel">
        <div class="mb-3">
            <label for="nombre">Nombre:</label>
            <input id="nombre" type="text" class="form-control" maxlength="50" @bind="_panel.Nombre" required />
        </div>

        <div class="mb-3">
            <label for="descripcion">Descripcion:</label>
            <input id="descripcion" type="text" class="form-control" maxlength="50" @bind="_panel.Descripcion" required />
        </div>
        <button type="submit" class="btn btn-primary">Agregar</button>
    </form>

    @if (!string.IsNullOrEmpty(_validationError))
    {
        <div class="alert alert-danger">
            <p>@_validationError</p>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(_successMessage))
    {
        <div class="alert alert-success">
            <p>@_successMessage</p>
        </div>
    }
}

@code {
    private List<Equipo> _equipos = new List<Equipo>();
    private string? _nombreEquipoSeleccionado;
    private Equipo? _equipoSeleccionado;
    private Panel? _panel = new Panel();
    private string? _validationError;
    private string? _successMessage;


    protected override void OnInitialized()
    {
        _equipos = EquipoLogic.ListarEquipos(SesionLogic.UsuarioLogueado);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && SesionLogic.UsuarioLogueado == null)
        {
            if (SesionLogic.UsuarioLogueado == null)
            {
                Navigation.NavigateTo("https://localhost:7014/", true);
            }
            firstRender = false;
        }
    }
    
    private void CargarEquipo()
    {
        if (!string.IsNullOrEmpty(_nombreEquipoSeleccionado))
        {
            _equipoSeleccionado = _equipos.FirstOrDefault(e => e.Nombre == _nombreEquipoSeleccionado);
        }
    }
    private void CrearPanel()
    {
        if (_equipoSeleccionado != null)
        {
            _panel.EquipoAlQuePertenece = _equipoSeleccionado.Nombre;
            _validationError = EquipoLogic.ValidarYGuardarPanel(_panel, _equipoSeleccionado, SesionLogic.UsuarioLogueado);
        }

        if(_validationError == null)
        {
            LimpiarFormulario();
        }
    }
    private void LimpiarFormulario()
    {
        if (string.IsNullOrEmpty(_validationError))
        {
            _panel = new Panel();
            _successMessage = "Panel agregado con éxito";
            
        }
    }
}